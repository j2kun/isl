load("@rules_cc//cc:defs.bzl", "cc_library")

# Template files that are included by other source files but not compiled directly
filegroup(
    name = "template_files",
    srcs = glob([
        "*_templ.c",
        "print_templ.c",
        "print_templ_yaml.c",
        "**/*_templ.c",
        # Other included C files
        "bset_from_bmap.c",
        "bset_to_bmap.c",
        "set_from_map.c",
        "set_to_map.c",
        "uset_from_umap.c",
        "uset_to_umap.c",
        "extract_key.c",
        "set_list_from_map_list_inl.c",
        "isl_pw_eval.c",
        "isl_multi_no_explicit_domain.c",
        "isl_union_single.c",
        "isl_pw_hash.c",
        "isl_multi_align_set.c",
        "isl_multi_align_union_set.c",
        "isl_multi_cmp.c",
        "isl_multi_coalesce.c",
        "isl_multi_dims.c",
        "isl_multi_explicit_domain.c",
        "isl_multi_floor.c",
        "isl_multi_gist.c",
        "isl_multi_hash.c",
        "isl_multi_intersect.c",
        "isl_multi_pw_aff_explicit_domain.c",
        "isl_multi_union_pw_aff_explicit_domain.c",
        "isl_union_multi.c",
        "isl_union_neg.c",
        "isl_union_eval.c",
        "isl_pw_union_opt.c",
        "isl_type_check_match_range_multi_val.c",
    ]),
)

cc_library(
    name = "isl",
    srcs = [
        # Private header files
        "gitversion.h",
        "isl_config.h",
        "isl_config_post.h",
        "isl_int_gmp.h",
        "isl_aff_private.h",
        "isl_ast_private.h",
        "isl_ast_build_private.h",
        "isl_ast_build_expr.h",
        "isl_ast_graft_private.h",
        "isl_basis_reduction.h",
        "isl_bernstein.h",
        "isl_blk.h",
        "isl_bound.h",
        "isl_constraint_private.h",
        "isl_ctx_private.h",
        "isl_dim_map.h",
        "isl_equalities.h",
        "isl_factorization.h",
        "isl_hash_private.h",
        "isl_ilp_private.h",
        "isl_int.h",
        "isl_list_macro.h",
        "isl_list_private.h",
        "isl_list_templ.h",
        "isl_local_private.h",
        "isl_local.h",
        "isl_local_space_private.h",
        "isl_lp_private.h",
        "isl_map_private.h",
        "isl_mat_private.h",
        "isl_maybe_aff.h",
        "isl_maybe_ast_graft_list.h",
        "isl_maybe_map.h",
        "isl_multi_macro.h",
        "isl_multi_templ.h",
        "isl_pw_macro.h",
        "isl_pw_templ.h",
        "isl_union_macro.h",
        "isl_morph.h",
        "isl_id_private.h",
        "isl_options_private.h",
        "isl_output_private.h",
        "isl_point_private.h",
        "isl_polynomial_private.h",
        "isl_printer_private.h",
        "isl_range.h",
        "isl_reordering.h",
        "isl_sample.h",
        "isl_scan.h",
        "isl_schedule_band.h",
        "isl_schedule_node_private.h",
        "isl_schedule_tree.h",
        "isl_schedule_private.h",
        "isl_schedule_constraints.h",
        "isl_scheduler.h",
        "isl_scheduler_clustering.h",
        "isl_scheduler_scc.h",
        "isl_sort.h",
        "isl_space_private.h",
        "isl_stream_private.h",
        "isl_seq.h",
        "isl_set_to_ast_graft_list.h",
        "isl_tab.h",
        "isl_tarjan.h",
        "isl_union_map_private.h",
        "isl_union_set_private.h",
        "isl_val_private.h",
        "isl_vec_private.h",
        "isl_vertices_private.h",
        "isl_yaml.h",
        "opt_type.h",

        # MP_SRC files
        "isl_gmp.c",
        "isl_val_gmp.c",

        # Core library sources
        "isl_aff.c",
        "isl_aff_map.c",
        "isl_affine_hull.c",
        "isl_arg.c",
        "isl_ast.c",
        "isl_ast_build.c",
        "isl_ast_build_expr.c",
        "isl_ast_codegen.c",
        "isl_ast_graft.c",
        "basis_reduction_tab.c",
        "isl_bernstein.c",
        "isl_blk.c",
        "isl_bound.c",
        "isl_box.c",
        "isl_coalesce.c",
        "isl_constraint.c",
        "isl_convex_hull.c",
        "isl_ctx.c",
        "isl_deprecated.c",
        "isl_dim_map.c",
        "isl_equalities.c",
        "isl_factorization.c",
        "isl_farkas.c",
        "isl_ffs.c",
        "isl_flow.c",
        "isl_fold.c",
        "isl_hash.c",
        "isl_id_to_ast_expr.c",
        "isl_id_to_id.c",
        "isl_id_to_pw_aff.c",
        "isl_ilp.c",
        "isl_input.c",
        "isl_local.c",
        "isl_local_space.c",
        "isl_lp.c",
        "isl_map.c",
        "isl_map_list.c",
        "isl_map_simplify.c",
        "isl_map_subtract.c",
        "isl_map_to_basic_set.c",
        "isl_mat.c",
        "isl_morph.c",
        "isl_id.c",
        "isl_obj.c",
        "isl_options.c",
        "isl_output.c",
        "isl_point.c",
        "isl_polynomial.c",
        "isl_printer.c",
        "print.c",
        "isl_range.c",
        "isl_reordering.c",
        "isl_sample.c",
        "isl_scan.c",
        "isl_schedule.c",
        "isl_schedule_band.c",
        "isl_schedule_node.c",
        "isl_schedule_read.c",
        "isl_schedule_tree.c",
        "isl_schedule_constraints.c",
        "isl_scheduler.c",
        "isl_scheduler_clustering.c",
        "isl_scheduler_scc.c",
        "isl_set_list.c",
        "isl_sort.c",
        "isl_space.c",
        "isl_stream.c",
        "isl_seq.c",
        "isl_set_to_ast_graft_list.c",
        "isl_stride.c",
        "isl_tab.c",
        "isl_tab_pip.c",
        "isl_tarjan.c",
        "isl_transitive_closure.c",
        "isl_union_map.c",
        "isl_val.c",
        "isl_vec.c",
        "isl_version.c",
        "isl_vertices.c",
    ],
    hdrs = glob([
        "include/isl/*.h",
    ]),
    textual_hdrs = [
        ":template_files",
    ],
    copts = [
        "-Wall",
    ],
    includes = [
        "include",
    ],
    local_defines = [
        "HAVE_CONFIG_H",
    ],
    linkopts = [
        "-lgmp",
    ],
    data = [
        ":template_files",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "ast_debug",
    srcs = ["ast_debug.c"],
    deps = [":isl"],
)

cc_binary(
    name = "hs_manual",
    srcs = ["hs_manual.c"],
    deps = [":isl"],
)
